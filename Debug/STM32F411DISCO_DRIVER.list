
STM32F411DISCO_DRIVER.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005a4  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800073c  08000744  00010744  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800073c  0800073c  00010744  2**0
                  CONTENTS
  4 .ARM          00000000  0800073c  0800073c  00010744  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800073c  08000744  00010744  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800073c  0800073c  0001073c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000740  08000740  00010740  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010744  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000744  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000744  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010744  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a43  00000000  00000000  00010774  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000026a  00000000  00000000  000111b7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00011428  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  000114e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001c71  00000000  00000000  00011580  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000db3  00000000  00000000  000131f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000069f0  00000000  00000000  00013fa4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001a994  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000024c  00000000  00000000  0001a9e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000724 	.word	0x08000724

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	08000724 	.word	0x08000724

080001d8 <GPIO_PeriClockControl>:
#include "driver_gpio.h"


/**************************Peripheral Clock Setup*******************/
void GPIO_PeriClockControl(GPIO_Reg_t *pGPIOx, uint8_t En_or_Di)
{
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
 80001de:	6078      	str	r0, [r7, #4]
 80001e0:	460b      	mov	r3, r1
 80001e2:	70fb      	strb	r3, [r7, #3]
	if(En_or_Di == ENABLE )
 80001e4:	78fb      	ldrb	r3, [r7, #3]
 80001e6:	2b01      	cmp	r3, #1
 80001e8:	d140      	bne.n	800026c <GPIO_PeriClockControl+0x94>
	{
		if(pGPIOx == GPIOA)
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	4a22      	ldr	r2, [pc, #136]	; (8000278 <GPIO_PeriClockControl+0xa0>)
 80001ee:	4293      	cmp	r3, r2
 80001f0:	d106      	bne.n	8000200 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLOCK_ENABLE();
 80001f2:	4b22      	ldr	r3, [pc, #136]	; (800027c <GPIO_PeriClockControl+0xa4>)
 80001f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f6:	4a21      	ldr	r2, [pc, #132]	; (800027c <GPIO_PeriClockControl+0xa4>)
 80001f8:	f043 0301 	orr.w	r3, r3, #1
 80001fc:	6313      	str	r3, [r2, #48]	; 0x30
		}
	}else
	{
		//
	}
}
 80001fe:	e035      	b.n	800026c <GPIO_PeriClockControl+0x94>
		else if(pGPIOx == GPIOB)
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	4a1f      	ldr	r2, [pc, #124]	; (8000280 <GPIO_PeriClockControl+0xa8>)
 8000204:	4293      	cmp	r3, r2
 8000206:	d106      	bne.n	8000216 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLOCK_ENABLE();
 8000208:	4b1c      	ldr	r3, [pc, #112]	; (800027c <GPIO_PeriClockControl+0xa4>)
 800020a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800020c:	4a1b      	ldr	r2, [pc, #108]	; (800027c <GPIO_PeriClockControl+0xa4>)
 800020e:	f043 0302 	orr.w	r3, r3, #2
 8000212:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000214:	e02a      	b.n	800026c <GPIO_PeriClockControl+0x94>
		}else if(pGPIOx == GPIOC)
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a1a      	ldr	r2, [pc, #104]	; (8000284 <GPIO_PeriClockControl+0xac>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d106      	bne.n	800022c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLOCK_ENABLE();
 800021e:	4b17      	ldr	r3, [pc, #92]	; (800027c <GPIO_PeriClockControl+0xa4>)
 8000220:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000222:	4a16      	ldr	r2, [pc, #88]	; (800027c <GPIO_PeriClockControl+0xa4>)
 8000224:	f043 0304 	orr.w	r3, r3, #4
 8000228:	6313      	str	r3, [r2, #48]	; 0x30
}
 800022a:	e01f      	b.n	800026c <GPIO_PeriClockControl+0x94>
		}else if(pGPIOx == GPIOD)
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	4a16      	ldr	r2, [pc, #88]	; (8000288 <GPIO_PeriClockControl+0xb0>)
 8000230:	4293      	cmp	r3, r2
 8000232:	d106      	bne.n	8000242 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLOCK_ENABLE();
 8000234:	4b11      	ldr	r3, [pc, #68]	; (800027c <GPIO_PeriClockControl+0xa4>)
 8000236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000238:	4a10      	ldr	r2, [pc, #64]	; (800027c <GPIO_PeriClockControl+0xa4>)
 800023a:	f043 0308 	orr.w	r3, r3, #8
 800023e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000240:	e014      	b.n	800026c <GPIO_PeriClockControl+0x94>
		}else if(pGPIOx == GPIOE)
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	4a11      	ldr	r2, [pc, #68]	; (800028c <GPIO_PeriClockControl+0xb4>)
 8000246:	4293      	cmp	r3, r2
 8000248:	d106      	bne.n	8000258 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLOCK_ENABLE();
 800024a:	4b0c      	ldr	r3, [pc, #48]	; (800027c <GPIO_PeriClockControl+0xa4>)
 800024c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024e:	4a0b      	ldr	r2, [pc, #44]	; (800027c <GPIO_PeriClockControl+0xa4>)
 8000250:	f043 0310 	orr.w	r3, r3, #16
 8000254:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000256:	e009      	b.n	800026c <GPIO_PeriClockControl+0x94>
		}else if(pGPIOx == GPIOH)
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	4a0d      	ldr	r2, [pc, #52]	; (8000290 <GPIO_PeriClockControl+0xb8>)
 800025c:	4293      	cmp	r3, r2
 800025e:	d105      	bne.n	800026c <GPIO_PeriClockControl+0x94>
			GPIOH_PCLOCK_ENABLE();
 8000260:	4b06      	ldr	r3, [pc, #24]	; (800027c <GPIO_PeriClockControl+0xa4>)
 8000262:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000264:	4a05      	ldr	r2, [pc, #20]	; (800027c <GPIO_PeriClockControl+0xa4>)
 8000266:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800026a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800026c:	bf00      	nop
 800026e:	370c      	adds	r7, #12
 8000270:	46bd      	mov	sp, r7
 8000272:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000276:	4770      	bx	lr
 8000278:	40020000 	.word	0x40020000
 800027c:	40023800 	.word	0x40023800
 8000280:	40020400 	.word	0x40020400
 8000284:	40020800 	.word	0x40020800
 8000288:	40020c00 	.word	0x40020c00
 800028c:	40021000 	.word	0x40021000
 8000290:	40021c00 	.word	0x40021c00

08000294 <GPIO_Init>:

/****************************Init and DeInit************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000294:	b580      	push	{r7, lr}
 8000296:	b086      	sub	sp, #24
 8000298:	af00      	add	r7, sp, #0
 800029a:	6078      	str	r0, [r7, #4]
    //enable peripheral clock control
    GPIO_PeriClockControl(pGPIOHandle ->pGPIOx, ENABLE);
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	2101      	movs	r1, #1
 80002a2:	4618      	mov	r0, r3
 80002a4:	f7ff ff98 	bl	80001d8 <GPIO_PeriClockControl>

	uint32_t temp = 0;
 80002a8:	2300      	movs	r3, #0
 80002aa:	617b      	str	r3, [r7, #20]
	//1. configure mode io pin
	if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	795b      	ldrb	r3, [r3, #5]
 80002b0:	2b03      	cmp	r3, #3
 80002b2:	d81f      	bhi.n	80002f4 <GPIO_Init+0x60>
	{
		//the non it mode
		temp = pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber);
 80002b4:	687b      	ldr	r3, [r7, #4]
 80002b6:	795b      	ldrb	r3, [r3, #5]
 80002b8:	461a      	mov	r2, r3
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	791b      	ldrb	r3, [r3, #4]
 80002be:	005b      	lsls	r3, r3, #1
 80002c0:	fa02 f303 	lsl.w	r3, r2, r3
 80002c4:	617b      	str	r3, [r7, #20]
		pGPIOHandle -> pGPIOx -> MODER &= ~(0x3 << pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber); //clc
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	681a      	ldr	r2, [r3, #0]
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	791b      	ldrb	r3, [r3, #4]
 80002d0:	4619      	mov	r1, r3
 80002d2:	2303      	movs	r3, #3
 80002d4:	408b      	lsls	r3, r1
 80002d6:	43db      	mvns	r3, r3
 80002d8:	4619      	mov	r1, r3
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	400a      	ands	r2, r1
 80002e0:	601a      	str	r2, [r3, #0]
		pGPIOHandle -> pGPIOx -> MODER |= temp;//set
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	6819      	ldr	r1, [r3, #0]
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	697a      	ldr	r2, [r7, #20]
 80002ee:	430a      	orrs	r2, r1
 80002f0:	601a      	str	r2, [r3, #0]
 80002f2:	e0a1      	b.n	8000438 <GPIO_Init+0x1a4>
	}else
	{
		//it mode
		if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	795b      	ldrb	r3, [r3, #5]
 80002f8:	2b04      	cmp	r3, #4
 80002fa:	d117      	bne.n	800032c <GPIO_Init+0x98>
		{
			//1 FTSR
			EXTI ->EXTI_FTSR |= (1 << pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber);
 80002fc:	4b9e      	ldr	r3, [pc, #632]	; (8000578 <GPIO_Init+0x2e4>)
 80002fe:	68db      	ldr	r3, [r3, #12]
 8000300:	687a      	ldr	r2, [r7, #4]
 8000302:	7912      	ldrb	r2, [r2, #4]
 8000304:	4611      	mov	r1, r2
 8000306:	2201      	movs	r2, #1
 8000308:	408a      	lsls	r2, r1
 800030a:	4611      	mov	r1, r2
 800030c:	4a9a      	ldr	r2, [pc, #616]	; (8000578 <GPIO_Init+0x2e4>)
 800030e:	430b      	orrs	r3, r1
 8000310:	60d3      	str	r3, [r2, #12]
			EXTI ->EXTI_RTSR &= ~(1 << pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber);//clc RTSR
 8000312:	4b99      	ldr	r3, [pc, #612]	; (8000578 <GPIO_Init+0x2e4>)
 8000314:	689b      	ldr	r3, [r3, #8]
 8000316:	687a      	ldr	r2, [r7, #4]
 8000318:	7912      	ldrb	r2, [r2, #4]
 800031a:	4611      	mov	r1, r2
 800031c:	2201      	movs	r2, #1
 800031e:	408a      	lsls	r2, r1
 8000320:	43d2      	mvns	r2, r2
 8000322:	4611      	mov	r1, r2
 8000324:	4a94      	ldr	r2, [pc, #592]	; (8000578 <GPIO_Init+0x2e4>)
 8000326:	400b      	ands	r3, r1
 8000328:	6093      	str	r3, [r2, #8]
 800032a:	e035      	b.n	8000398 <GPIO_Init+0x104>

		}else if (pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	795b      	ldrb	r3, [r3, #5]
 8000330:	2b05      	cmp	r3, #5
 8000332:	d117      	bne.n	8000364 <GPIO_Init+0xd0>
		{
			//1 RTSR
			EXTI ->EXTI_RTSR |= (1 << pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber);
 8000334:	4b90      	ldr	r3, [pc, #576]	; (8000578 <GPIO_Init+0x2e4>)
 8000336:	689b      	ldr	r3, [r3, #8]
 8000338:	687a      	ldr	r2, [r7, #4]
 800033a:	7912      	ldrb	r2, [r2, #4]
 800033c:	4611      	mov	r1, r2
 800033e:	2201      	movs	r2, #1
 8000340:	408a      	lsls	r2, r1
 8000342:	4611      	mov	r1, r2
 8000344:	4a8c      	ldr	r2, [pc, #560]	; (8000578 <GPIO_Init+0x2e4>)
 8000346:	430b      	orrs	r3, r1
 8000348:	6093      	str	r3, [r2, #8]
			EXTI ->EXTI_FTSR &= ~(1 << pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber);//clc FTSR
 800034a:	4b8b      	ldr	r3, [pc, #556]	; (8000578 <GPIO_Init+0x2e4>)
 800034c:	68db      	ldr	r3, [r3, #12]
 800034e:	687a      	ldr	r2, [r7, #4]
 8000350:	7912      	ldrb	r2, [r2, #4]
 8000352:	4611      	mov	r1, r2
 8000354:	2201      	movs	r2, #1
 8000356:	408a      	lsls	r2, r1
 8000358:	43d2      	mvns	r2, r2
 800035a:	4611      	mov	r1, r2
 800035c:	4a86      	ldr	r2, [pc, #536]	; (8000578 <GPIO_Init+0x2e4>)
 800035e:	400b      	ands	r3, r1
 8000360:	60d3      	str	r3, [r2, #12]
 8000362:	e019      	b.n	8000398 <GPIO_Init+0x104>

		}else if (pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	795b      	ldrb	r3, [r3, #5]
 8000368:	2b06      	cmp	r3, #6
 800036a:	d115      	bne.n	8000398 <GPIO_Init+0x104>
		{
			//1 FTSR & RTSR
			EXTI ->EXTI_RTSR |= (1 << pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber);
 800036c:	4b82      	ldr	r3, [pc, #520]	; (8000578 <GPIO_Init+0x2e4>)
 800036e:	689b      	ldr	r3, [r3, #8]
 8000370:	687a      	ldr	r2, [r7, #4]
 8000372:	7912      	ldrb	r2, [r2, #4]
 8000374:	4611      	mov	r1, r2
 8000376:	2201      	movs	r2, #1
 8000378:	408a      	lsls	r2, r1
 800037a:	4611      	mov	r1, r2
 800037c:	4a7e      	ldr	r2, [pc, #504]	; (8000578 <GPIO_Init+0x2e4>)
 800037e:	430b      	orrs	r3, r1
 8000380:	6093      	str	r3, [r2, #8]
			EXTI ->EXTI_FTSR |= (1 << pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber);
 8000382:	4b7d      	ldr	r3, [pc, #500]	; (8000578 <GPIO_Init+0x2e4>)
 8000384:	68db      	ldr	r3, [r3, #12]
 8000386:	687a      	ldr	r2, [r7, #4]
 8000388:	7912      	ldrb	r2, [r2, #4]
 800038a:	4611      	mov	r1, r2
 800038c:	2201      	movs	r2, #1
 800038e:	408a      	lsls	r2, r1
 8000390:	4611      	mov	r1, r2
 8000392:	4a79      	ldr	r2, [pc, #484]	; (8000578 <GPIO_Init+0x2e4>)
 8000394:	430b      	orrs	r3, r1
 8000396:	60d3      	str	r3, [r2, #12]
		}

		//2 GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber /4;
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	791b      	ldrb	r3, [r3, #4]
 800039c:	089b      	lsrs	r3, r3, #2
 800039e:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber %4;
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	791b      	ldrb	r3, [r3, #4]
 80003a4:	f003 0303 	and.w	r3, r3, #3
 80003a8:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle -> pGPIOx);
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	4a73      	ldr	r2, [pc, #460]	; (800057c <GPIO_Init+0x2e8>)
 80003b0:	4293      	cmp	r3, r2
 80003b2:	d024      	beq.n	80003fe <GPIO_Init+0x16a>
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	4a71      	ldr	r2, [pc, #452]	; (8000580 <GPIO_Init+0x2ec>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d01d      	beq.n	80003fa <GPIO_Init+0x166>
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	4a70      	ldr	r2, [pc, #448]	; (8000584 <GPIO_Init+0x2f0>)
 80003c4:	4293      	cmp	r3, r2
 80003c6:	d016      	beq.n	80003f6 <GPIO_Init+0x162>
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	4a6e      	ldr	r2, [pc, #440]	; (8000588 <GPIO_Init+0x2f4>)
 80003ce:	4293      	cmp	r3, r2
 80003d0:	d00f      	beq.n	80003f2 <GPIO_Init+0x15e>
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	4a6d      	ldr	r2, [pc, #436]	; (800058c <GPIO_Init+0x2f8>)
 80003d8:	4293      	cmp	r3, r2
 80003da:	d008      	beq.n	80003ee <GPIO_Init+0x15a>
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	4a6b      	ldr	r2, [pc, #428]	; (8000590 <GPIO_Init+0x2fc>)
 80003e2:	4293      	cmp	r3, r2
 80003e4:	d101      	bne.n	80003ea <GPIO_Init+0x156>
 80003e6:	2307      	movs	r3, #7
 80003e8:	e00a      	b.n	8000400 <GPIO_Init+0x16c>
 80003ea:	2300      	movs	r3, #0
 80003ec:	e008      	b.n	8000400 <GPIO_Init+0x16c>
 80003ee:	2304      	movs	r3, #4
 80003f0:	e006      	b.n	8000400 <GPIO_Init+0x16c>
 80003f2:	2303      	movs	r3, #3
 80003f4:	e004      	b.n	8000400 <GPIO_Init+0x16c>
 80003f6:	2302      	movs	r3, #2
 80003f8:	e002      	b.n	8000400 <GPIO_Init+0x16c>
 80003fa:	2301      	movs	r3, #1
 80003fc:	e000      	b.n	8000400 <GPIO_Init+0x16c>
 80003fe:	2300      	movs	r3, #0
 8000400:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLOCK_ENABLE();
 8000402:	4b64      	ldr	r3, [pc, #400]	; (8000594 <GPIO_Init+0x300>)
 8000404:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000406:	4a63      	ldr	r2, [pc, #396]	; (8000594 <GPIO_Init+0x300>)
 8000408:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800040c:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG -> EXTICR[temp1] = portcode <<(temp2 * 4);
 800040e:	7c7a      	ldrb	r2, [r7, #17]
 8000410:	7cbb      	ldrb	r3, [r7, #18]
 8000412:	009b      	lsls	r3, r3, #2
 8000414:	fa02 f103 	lsl.w	r1, r2, r3
 8000418:	4a5f      	ldr	r2, [pc, #380]	; (8000598 <GPIO_Init+0x304>)
 800041a:	7cfb      	ldrb	r3, [r7, #19]
 800041c:	3302      	adds	r3, #2
 800041e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. enable exti interupt delivery using IMR
		EXTI ->EXTI_IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000422:	4b55      	ldr	r3, [pc, #340]	; (8000578 <GPIO_Init+0x2e4>)
 8000424:	681b      	ldr	r3, [r3, #0]
 8000426:	687a      	ldr	r2, [r7, #4]
 8000428:	7912      	ldrb	r2, [r2, #4]
 800042a:	4611      	mov	r1, r2
 800042c:	2201      	movs	r2, #1
 800042e:	408a      	lsls	r2, r1
 8000430:	4611      	mov	r1, r2
 8000432:	4a51      	ldr	r2, [pc, #324]	; (8000578 <GPIO_Init+0x2e4>)
 8000434:	430b      	orrs	r3, r1
 8000436:	6013      	str	r3, [r2, #0]
	}


	temp = 0;
 8000438:	2300      	movs	r3, #0
 800043a:	617b      	str	r3, [r7, #20]

	//2. configure speed
	temp = pGPIOHandle -> GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber);
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	799b      	ldrb	r3, [r3, #6]
 8000440:	461a      	mov	r2, r3
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	791b      	ldrb	r3, [r3, #4]
 8000446:	005b      	lsls	r3, r3, #1
 8000448:	fa02 f303 	lsl.w	r3, r2, r3
 800044c:	617b      	str	r3, [r7, #20]
	pGPIOHandle -> pGPIOx -> OSPEEDR &= ~(0x3 << pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber); //clc
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	689a      	ldr	r2, [r3, #8]
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	791b      	ldrb	r3, [r3, #4]
 8000458:	4619      	mov	r1, r3
 800045a:	2303      	movs	r3, #3
 800045c:	408b      	lsls	r3, r1
 800045e:	43db      	mvns	r3, r3
 8000460:	4619      	mov	r1, r3
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	400a      	ands	r2, r1
 8000468:	609a      	str	r2, [r3, #8]
	pGPIOHandle -> pGPIOx -> OSPEEDR |= temp;
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	6899      	ldr	r1, [r3, #8]
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	697a      	ldr	r2, [r7, #20]
 8000476:	430a      	orrs	r2, r1
 8000478:	609a      	str	r2, [r3, #8]

	temp = 0;
 800047a:	2300      	movs	r3, #0
 800047c:	617b      	str	r3, [r7, #20]
	//3. configure pupd setting
	temp = pGPIOHandle -> GPIO_PinConfig.GPIO_PinPuPControl << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber);
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	79db      	ldrb	r3, [r3, #7]
 8000482:	461a      	mov	r2, r3
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	791b      	ldrb	r3, [r3, #4]
 8000488:	005b      	lsls	r3, r3, #1
 800048a:	fa02 f303 	lsl.w	r3, r2, r3
 800048e:	617b      	str	r3, [r7, #20]
	pGPIOHandle -> pGPIOx -> PUPDR &= ~(0x3 << pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber); //clc
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	68da      	ldr	r2, [r3, #12]
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	791b      	ldrb	r3, [r3, #4]
 800049a:	4619      	mov	r1, r3
 800049c:	2303      	movs	r3, #3
 800049e:	408b      	lsls	r3, r1
 80004a0:	43db      	mvns	r3, r3
 80004a2:	4619      	mov	r1, r3
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	400a      	ands	r2, r1
 80004aa:	60da      	str	r2, [r3, #12]
	pGPIOHandle -> pGPIOx -> PUPDR |= temp;
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	68d9      	ldr	r1, [r3, #12]
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	697a      	ldr	r2, [r7, #20]
 80004b8:	430a      	orrs	r2, r1
 80004ba:	60da      	str	r2, [r3, #12]

	temp = 0;
 80004bc:	2300      	movs	r3, #0
 80004be:	617b      	str	r3, [r7, #20]
	//4. configure optype
	temp = pGPIOHandle -> GPIO_PinConfig.GPIO_PinOPType << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber);
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	7a1b      	ldrb	r3, [r3, #8]
 80004c4:	461a      	mov	r2, r3
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	791b      	ldrb	r3, [r3, #4]
 80004ca:	005b      	lsls	r3, r3, #1
 80004cc:	fa02 f303 	lsl.w	r3, r2, r3
 80004d0:	617b      	str	r3, [r7, #20]
	pGPIOHandle -> pGPIOx -> OTYPER &= ~(0x3 << pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber); //clc
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	685a      	ldr	r2, [r3, #4]
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	791b      	ldrb	r3, [r3, #4]
 80004dc:	4619      	mov	r1, r3
 80004de:	2303      	movs	r3, #3
 80004e0:	408b      	lsls	r3, r1
 80004e2:	43db      	mvns	r3, r3
 80004e4:	4619      	mov	r1, r3
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	681b      	ldr	r3, [r3, #0]
 80004ea:	400a      	ands	r2, r1
 80004ec:	605a      	str	r2, [r3, #4]
	pGPIOHandle -> pGPIOx -> OTYPER |= temp;
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	6859      	ldr	r1, [r3, #4]
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	697a      	ldr	r2, [r7, #20]
 80004fa:	430a      	orrs	r2, r1
 80004fc:	605a      	str	r2, [r3, #4]

	temp = 0;
 80004fe:	2300      	movs	r3, #0
 8000500:	617b      	str	r3, [r7, #20]
	//5. configure alt func
	if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFUNC)
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	795b      	ldrb	r3, [r3, #5]
 8000506:	2b02      	cmp	r3, #2
 8000508:	d131      	bne.n	800056e <GPIO_Init+0x2da>
	{
		//configure alt func
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber /8;
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	791b      	ldrb	r3, [r3, #4]
 800050e:	08db      	lsrs	r3, r3, #3
 8000510:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber %8;
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	791b      	ldrb	r3, [r3, #4]
 8000516:	f003 0307 	and.w	r3, r3, #7
 800051a:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle -> pGPIOx -> AFR[temp1] &= ~(0xF << (4 * temp2)); //clc
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	7c3a      	ldrb	r2, [r7, #16]
 8000522:	3208      	adds	r2, #8
 8000524:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000528:	7bfb      	ldrb	r3, [r7, #15]
 800052a:	009b      	lsls	r3, r3, #2
 800052c:	220f      	movs	r2, #15
 800052e:	fa02 f303 	lsl.w	r3, r2, r3
 8000532:	43db      	mvns	r3, r3
 8000534:	4618      	mov	r0, r3
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	681b      	ldr	r3, [r3, #0]
 800053a:	7c3a      	ldrb	r2, [r7, #16]
 800053c:	4001      	ands	r1, r0
 800053e:	3208      	adds	r2, #8
 8000540:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle -> pGPIOx -> AFR[temp1] |= (pGPIOHandle -> GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	7c3a      	ldrb	r2, [r7, #16]
 800054a:	3208      	adds	r2, #8
 800054c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	7a5b      	ldrb	r3, [r3, #9]
 8000554:	461a      	mov	r2, r3
 8000556:	7bfb      	ldrb	r3, [r7, #15]
 8000558:	009b      	lsls	r3, r3, #2
 800055a:	fa02 f303 	lsl.w	r3, r2, r3
 800055e:	4618      	mov	r0, r3
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	7c3a      	ldrb	r2, [r7, #16]
 8000566:	4301      	orrs	r1, r0
 8000568:	3208      	adds	r2, #8
 800056a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 800056e:	bf00      	nop
 8000570:	3718      	adds	r7, #24
 8000572:	46bd      	mov	sp, r7
 8000574:	bd80      	pop	{r7, pc}
 8000576:	bf00      	nop
 8000578:	40013c00 	.word	0x40013c00
 800057c:	40020000 	.word	0x40020000
 8000580:	40020400 	.word	0x40020400
 8000584:	40020800 	.word	0x40020800
 8000588:	40020c00 	.word	0x40020c00
 800058c:	40021000 	.word	0x40021000
 8000590:	40021c00 	.word	0x40021c00
 8000594:	40023800 	.word	0x40023800
 8000598:	40013800 	.word	0x40013800

0800059c <GPIO_ReadFromInputPin>:
}

/**************************Data Read and Write*******************/

uint8_t GPIO_ReadFromInputPin(GPIO_Reg_t *pGPIOx, uint8_t PinNumber)
{
 800059c:	b480      	push	{r7}
 800059e:	b085      	sub	sp, #20
 80005a0:	af00      	add	r7, sp, #0
 80005a2:	6078      	str	r0, [r7, #4]
 80005a4:	460b      	mov	r3, r1
 80005a6:	70fb      	strb	r3, [r7, #3]
	uint8_t Value;
	Value = (uint8_t)((pGPIOx -> IDR >> PinNumber) & 0x00000001);
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	691a      	ldr	r2, [r3, #16]
 80005ac:	78fb      	ldrb	r3, [r7, #3]
 80005ae:	fa22 f303 	lsr.w	r3, r2, r3
 80005b2:	b2db      	uxtb	r3, r3
 80005b4:	f003 0301 	and.w	r3, r3, #1
 80005b8:	73fb      	strb	r3, [r7, #15]
	return Value;
 80005ba:	7bfb      	ldrb	r3, [r7, #15]
}
 80005bc:	4618      	mov	r0, r3
 80005be:	3714      	adds	r7, #20
 80005c0:	46bd      	mov	sp, r7
 80005c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c6:	4770      	bx	lr

080005c8 <GPIO_ToggleOutputPin>:
{
	pGPIOx -> ODR = Value;
}

void GPIO_ToggleOutputPin(GPIO_Reg_t *pGPIOx, uint8_t PinNumber)
{
 80005c8:	b480      	push	{r7}
 80005ca:	b083      	sub	sp, #12
 80005cc:	af00      	add	r7, sp, #0
 80005ce:	6078      	str	r0, [r7, #4]
 80005d0:	460b      	mov	r3, r1
 80005d2:	70fb      	strb	r3, [r7, #3]
	pGPIOx -> ODR ^= (1 << PinNumber);
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	695b      	ldr	r3, [r3, #20]
 80005d8:	78fa      	ldrb	r2, [r7, #3]
 80005da:	2101      	movs	r1, #1
 80005dc:	fa01 f202 	lsl.w	r2, r1, r2
 80005e0:	405a      	eors	r2, r3
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	615a      	str	r2, [r3, #20]
}
 80005e6:	bf00      	nop
 80005e8:	370c      	adds	r7, #12
 80005ea:	46bd      	mov	sp, r7
 80005ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f0:	4770      	bx	lr
	...

080005f4 <delay>:
#include "driver.h"

#define BUTTON_PRESS    1

void delay(void)
{
 80005f4:	b480      	push	{r7}
 80005f6:	b083      	sub	sp, #12
 80005f8:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 500000/2 ; i ++);
 80005fa:	2300      	movs	r3, #0
 80005fc:	607b      	str	r3, [r7, #4]
 80005fe:	e002      	b.n	8000606 <delay+0x12>
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	3301      	adds	r3, #1
 8000604:	607b      	str	r3, [r7, #4]
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	4a04      	ldr	r2, [pc, #16]	; (800061c <delay+0x28>)
 800060a:	4293      	cmp	r3, r2
 800060c:	d9f8      	bls.n	8000600 <delay+0xc>
}
 800060e:	bf00      	nop
 8000610:	bf00      	nop
 8000612:	370c      	adds	r7, #12
 8000614:	46bd      	mov	sp, r7
 8000616:	f85d 7b04 	ldr.w	r7, [sp], #4
 800061a:	4770      	bx	lr
 800061c:	0003d08f 	.word	0x0003d08f

08000620 <main>:

int main()
{
 8000620:	b580      	push	{r7, lr}
 8000622:	b086      	sub	sp, #24
 8000624:	af00      	add	r7, sp, #0
    GPIO_Handle_t GpioLed, GpioButton;
    GpioLed.pGPIOx = GPIOD;
 8000626:	4b16      	ldr	r3, [pc, #88]	; (8000680 <main+0x60>)
 8000628:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber		    = GPIO_PIN_15;
 800062a:	230f      	movs	r3, #15
 800062c:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode 		    = GPIO_MODE_OUTPUT;
 800062e:	2301      	movs	r3, #1
 8000630:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed 		    = GPIO_SPEED_FAST;
 8000632:	2302      	movs	r3, #2
 8000634:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType		    = GPIO_OP_TYPE_PP;
 8000636:	2300      	movs	r3, #0
 8000638:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPControl	    = GPIO_NO_PUPD;
 800063a:	2300      	movs	r3, #0
 800063c:	74fb      	strb	r3, [r7, #19]
    GPIO_Init(&GpioLed);
 800063e:	f107 030c 	add.w	r3, r7, #12
 8000642:	4618      	mov	r0, r3
 8000644:	f7ff fe26 	bl	8000294 <GPIO_Init>

    GpioButton.pGPIOx = GPIOA;
 8000648:	4b0e      	ldr	r3, [pc, #56]	; (8000684 <main+0x64>)
 800064a:	603b      	str	r3, [r7, #0]
    GpioButton.GPIO_PinConfig.GPIO_PinNumber        = GPIO_PIN_0;
 800064c:	2300      	movs	r3, #0
 800064e:	713b      	strb	r3, [r7, #4]
    GpioButton.GPIO_PinConfig.GPIO_PinMode          = GPIO_MODE_INPUT;
 8000650:	2300      	movs	r3, #0
 8000652:	717b      	strb	r3, [r7, #5]
    GpioButton.GPIO_PinConfig.GPIO_PinSpeed 		= GPIO_SPEED_FAST;
 8000654:	2302      	movs	r3, #2
 8000656:	71bb      	strb	r3, [r7, #6]
	GpioButton.GPIO_PinConfig.GPIO_PinPuPControl	= GPIO_NO_PUPD;
 8000658:	2300      	movs	r3, #0
 800065a:	71fb      	strb	r3, [r7, #7]
    GPIO_Init(&GpioButton);
 800065c:	463b      	mov	r3, r7
 800065e:	4618      	mov	r0, r3
 8000660:	f7ff fe18 	bl	8000294 <GPIO_Init>

    while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_0) == BUTTON_PRESS)
 8000664:	2100      	movs	r1, #0
 8000666:	4807      	ldr	r0, [pc, #28]	; (8000684 <main+0x64>)
 8000668:	f7ff ff98 	bl	800059c <GPIO_ReadFromInputPin>
 800066c:	4603      	mov	r3, r0
 800066e:	2b01      	cmp	r3, #1
 8000670:	d1f8      	bne.n	8000664 <main+0x44>
			{
				delay();
 8000672:	f7ff ffbf 	bl	80005f4 <delay>
				GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_15);
 8000676:	210f      	movs	r1, #15
 8000678:	4801      	ldr	r0, [pc, #4]	; (8000680 <main+0x60>)
 800067a:	f7ff ffa5 	bl	80005c8 <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_0) == BUTTON_PRESS)
 800067e:	e7f1      	b.n	8000664 <main+0x44>
 8000680:	40020c00 	.word	0x40020c00
 8000684:	40020000 	.word	0x40020000

08000688 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000688:	480d      	ldr	r0, [pc, #52]	; (80006c0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800068a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800068c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000690:	480c      	ldr	r0, [pc, #48]	; (80006c4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000692:	490d      	ldr	r1, [pc, #52]	; (80006c8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000694:	4a0d      	ldr	r2, [pc, #52]	; (80006cc <LoopForever+0xe>)
  movs r3, #0
 8000696:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000698:	e002      	b.n	80006a0 <LoopCopyDataInit>

0800069a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800069a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800069c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800069e:	3304      	adds	r3, #4

080006a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006a4:	d3f9      	bcc.n	800069a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006a6:	4a0a      	ldr	r2, [pc, #40]	; (80006d0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006a8:	4c0a      	ldr	r4, [pc, #40]	; (80006d4 <LoopForever+0x16>)
  movs r3, #0
 80006aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006ac:	e001      	b.n	80006b2 <LoopFillZerobss>

080006ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006b0:	3204      	adds	r2, #4

080006b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006b4:	d3fb      	bcc.n	80006ae <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006b6:	f000 f811 	bl	80006dc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006ba:	f7ff ffb1 	bl	8000620 <main>

080006be <LoopForever>:

LoopForever:
    b LoopForever
 80006be:	e7fe      	b.n	80006be <LoopForever>
  ldr   r0, =_estack
 80006c0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80006c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006c8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80006cc:	08000744 	.word	0x08000744
  ldr r2, =_sbss
 80006d0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80006d4:	2000001c 	.word	0x2000001c

080006d8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006d8:	e7fe      	b.n	80006d8 <ADC_IRQHandler>
	...

080006dc <__libc_init_array>:
 80006dc:	b570      	push	{r4, r5, r6, lr}
 80006de:	4d0d      	ldr	r5, [pc, #52]	; (8000714 <__libc_init_array+0x38>)
 80006e0:	4c0d      	ldr	r4, [pc, #52]	; (8000718 <__libc_init_array+0x3c>)
 80006e2:	1b64      	subs	r4, r4, r5
 80006e4:	10a4      	asrs	r4, r4, #2
 80006e6:	2600      	movs	r6, #0
 80006e8:	42a6      	cmp	r6, r4
 80006ea:	d109      	bne.n	8000700 <__libc_init_array+0x24>
 80006ec:	4d0b      	ldr	r5, [pc, #44]	; (800071c <__libc_init_array+0x40>)
 80006ee:	4c0c      	ldr	r4, [pc, #48]	; (8000720 <__libc_init_array+0x44>)
 80006f0:	f000 f818 	bl	8000724 <_init>
 80006f4:	1b64      	subs	r4, r4, r5
 80006f6:	10a4      	asrs	r4, r4, #2
 80006f8:	2600      	movs	r6, #0
 80006fa:	42a6      	cmp	r6, r4
 80006fc:	d105      	bne.n	800070a <__libc_init_array+0x2e>
 80006fe:	bd70      	pop	{r4, r5, r6, pc}
 8000700:	f855 3b04 	ldr.w	r3, [r5], #4
 8000704:	4798      	blx	r3
 8000706:	3601      	adds	r6, #1
 8000708:	e7ee      	b.n	80006e8 <__libc_init_array+0xc>
 800070a:	f855 3b04 	ldr.w	r3, [r5], #4
 800070e:	4798      	blx	r3
 8000710:	3601      	adds	r6, #1
 8000712:	e7f2      	b.n	80006fa <__libc_init_array+0x1e>
 8000714:	0800073c 	.word	0x0800073c
 8000718:	0800073c 	.word	0x0800073c
 800071c:	0800073c 	.word	0x0800073c
 8000720:	08000740 	.word	0x08000740

08000724 <_init>:
 8000724:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000726:	bf00      	nop
 8000728:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800072a:	bc08      	pop	{r3}
 800072c:	469e      	mov	lr, r3
 800072e:	4770      	bx	lr

08000730 <_fini>:
 8000730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000732:	bf00      	nop
 8000734:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000736:	bc08      	pop	{r3}
 8000738:	469e      	mov	lr, r3
 800073a:	4770      	bx	lr
